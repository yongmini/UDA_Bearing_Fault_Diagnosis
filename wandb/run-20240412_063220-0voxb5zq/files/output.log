04-12 06:32:21 imba: False
04-12 06:32:21 model_name: DANN
04-12 06:32:21 Domain: CWRU
04-12 06:32:21 source: CWRU_1
04-12 06:32:21 target: CWRU_0
04-12 06:32:21 data_dir: ./datasets
04-12 06:32:21 train_mode: single_source
04-12 06:32:21 cuda_device: 0
04-12 06:32:21 save_dir: ./ckpt/DANN/single_source
04-12 06:32:21 max_epoch: 10
04-12 06:32:21 batch_size: 64
04-12 06:32:21 num_workers: 0
04-12 06:32:21 signal_size: 2048
04-12 06:32:21 random_state: 2024
04-12 06:32:21 normlizetype: mean-std
04-12 06:32:21 opt: sgd
04-12 06:32:21 lr: 0.001
04-12 06:32:21 momentum: 0.9
04-12 06:32:21 betas: (0.9, 0.999)
04-12 06:32:21 weight_decay: 0.0005
04-12 06:32:21 lr_scheduler: stepLR
04-12 06:32:21 gamma: 0.2
04-12 06:32:21 steps: 10
04-12 06:32:21 tradeoff: ['exp', 'exp', 'exp']
04-12 06:32:21 dropout: 0.0
04-12 06:32:21 save: False
04-12 06:32:21 load_path: 
04-12 06:32:21 tsne: True
04-12 06:32:21 save_path: ./ckpt/DANN/single_source/[CWRU_1]To[CWRU_0]_0412-063221
04-12 06:32:21 Detect 4 classes: ['ball', 'inner', 'normal', 'outer']
04-12 06:32:21 using 1 / 1 gpus
Training data length: 757
Testing data length: 379
Source Data Distribution:04-12 06:32:25 Source set CWRU_1 number of samples 1044.
+--------------+---------+
| Label        |   Count |
|--------------+---------|
| 0            |     261 |
| 1            |     261 |
| 2            |     261 |
| 3            |     261 |
| Dataset Size |    1044 |
+--------------+---------+

Training data length: 759
Testing data length: 380
Target Data Distribution:
04-12 06:32:25 target training set number of samples 696.+--------------+---------+-------+
|              |   train |   val |
|--------------+---------+-------|
| 0            |     174 |    87 |
| 1            |     174 |    87 |
| 2            |     174 |    87 |
| 3            |     174 |    87 |
| Dataset Size |     696 |   348 |
+--------------+---------+-------+

04-12 06:32:25 target validation set number of samples 348.
04-12 06:32:25 -----Epoch 1/10-----
04-12 06:32:25 current lr: [0.001, 0.001]
10
  0%|          | 0/10 [00:00<?, ?it/s] 30%|###       | 3/10 [00:00<00:00, 23.53it/s] 70%|#######   | 7/10 [00:00<00:00, 29.82it/s]100%|##########| 10/10 [00:00<00:00, 30.57it/s]
04-12 06:32:25 Train-Loss Source Classifier: 1.3723
04-12 06:32:25 Train-Loss Discriminator: 0.6986
04-12 06:32:25 Train-Acc Source Data: 0.2000
04-12 06:32:25 Train-Acc Discriminator: 49.9219
6  0%|          | 0/6 [00:00<?, ?it/s]
100%|##########| 6/6 [00:00<00:00, 143.53it/s]
04-12 06:32:25 Val-Acc Target Data: 0.2292
04-12 06:32:25 The best model epoch 1, val-acc 0.2292
04-12 06:32:25 -----Epoch 2/10-----
04-12 06:32:25 current lr: [0.001, 0.001]
10  0%|          | 0/10 [00:00<?, ?it/s]
 40%|####      | 4/10 [00:00<00:00, 39.18it/s] 80%|########  | 8/10 [00:00<00:00, 36.50it/s]100%|##########| 10/10 [00:00<00:00, 37.02it/s]
04-12 06:32:26 Train-Loss Source Classifier: 1.1728
04-12 06:32:26 Train-Loss Discriminator: 0.6971
04-12 06:32:26 Train-Acc Source Data: 0.6328
04-12 06:32:26 Train-Acc Discriminator: 48.5938
  0%|          | 0/6 [00:00<?, ?it/s]6
100%|##########| 6/6 [00:00<00:00, 147.12it/s]
04-12 06:32:26 Val-Acc Target Data: 0.6146
04-12 06:32:26 The best model epoch 2, val-acc 0.6146
04-12 06:32:26 -----Epoch 3/10-----
1004-12 06:32:26 current lr: [0.001, 0.001]
  0%|          | 0/10 [00:00<?, ?it/s]
 40%|####      | 4/10 [00:00<00:00, 39.21it/s] 80%|########  | 8/10 [00:00<00:00, 37.71it/s]100%|##########| 10/10 [00:00<00:00, 37.57it/s]
04-12 06:32:26 Train-Loss Source Classifier: 0.9385
04-12 06:32:26 Train-Loss Discriminator: 0.6947
04-12 06:32:26 Train-Acc Source Data: 0.8672
04-12 06:32:26 Train-Acc Discriminator: 48.2812
  0%|          | 0/6 [00:00<?, ?it/s]6
100%|##########| 6/6 [00:00<00:00, 138.09it/s]
04-12 06:32:26 Val-Acc Target Data: 0.9074
04-12 06:32:26 The best model epoch 3, val-acc 0.9074
04-12 06:32:26 -----Epoch 4/10-----
04-12 06:32:26 current lr: [0.001, 0.001]
10  0%|          | 0/10 [00:00<?, ?it/s]
 40%|####      | 4/10 [00:00<00:00, 37.83it/s] 80%|########  | 8/10 [00:00<00:00, 36.70it/s]100%|##########| 10/10 [00:00<00:00, 36.99it/s]
04-12 06:32:26 Train-Loss Source Classifier: 0.6794
04-12 06:32:26 Train-Loss Discriminator: 0.6934
04-12 06:32:26 Train-Acc Source Data: 0.9344
04-12 06:32:26 Train-Acc Discriminator: 51.0156
6
  0%|          | 0/6 [00:00<?, ?it/s]100%|##########| 6/6 [00:00<00:00, 139.36it/s]
04-12 06:32:26 Val-Acc Target Data: 0.8880
04-12 06:32:26 The best model epoch 3, val-acc 0.9074
04-12 06:32:26 -----Epoch 5/10-----
1004-12 06:32:26 current lr: [0.001, 0.001]
  0%|          | 0/10 [00:00<?, ?it/s]
 40%|####      | 4/10 [00:00<00:00, 38.38it/s] 80%|########  | 8/10 [00:00<00:00, 36.16it/s]100%|##########| 10/10 [00:00<00:00, 36.34it/s]
04-12 06:32:27 Train-Loss Source Classifier: 0.4914
04-12 06:32:27 Train-Loss Discriminator: 0.6931
04-12 06:32:27 Train-Acc Source Data: 0.9141
04-12 06:32:27 Train-Acc Discriminator: 48.5156
6  0%|          | 0/6 [00:00<?, ?it/s]
100%|##########| 6/6 [00:00<00:00, 104.54it/s]
04-12 06:32:27 Val-Acc Target Data: 0.9062
04-12 06:32:27 The best model epoch 3, val-acc 0.9074
1004-12 06:32:27 -----Epoch 6/10-----
04-12 06:32:27 current lr: [0.001, 0.001]

  0%|          | 0/10 [00:00<?, ?it/s] 40%|####      | 4/10 [00:00<00:00, 37.65it/s] 80%|########  | 8/10 [00:00<00:00, 36.66it/s]100%|##########| 10/10 [00:00<00:00, 36.68it/s]
04-12 06:32:27 Train-Loss Source Classifier: 0.3412
04-12 06:32:27 Train-Loss Discriminator: 0.6912
04-12 06:32:27 Train-Acc Source Data: 0.9563
04-12 06:32:27 Train-Acc Discriminator: 52.6562
6  0%|          | 0/6 [00:00<?, ?it/s]
100%|##########| 6/6 [00:00<00:00, 138.94it/s]
04-12 06:32:27 Val-Acc Target Data: 0.9531
04-12 06:32:27 The best model epoch 6, val-acc 0.9531
1004-12 06:32:27 -----Epoch 7/10-----
04-12 06:32:27 current lr: [0.001, 0.001]

  0%|          | 0/10 [00:00<?, ?it/s] 40%|####      | 4/10 [00:00<00:00, 38.47it/s] 80%|########  | 8/10 [00:00<00:00, 37.59it/s]100%|##########| 10/10 [00:00<00:00, 37.40it/s]
04-12 06:32:27 Train-Loss Source Classifier: 0.2209
04-12 06:32:27 Train-Loss Discriminator: 0.6894
04-12 06:32:27 Train-Acc Source Data: 0.9906
04-12 06:32:27 Train-Acc Discriminator: 53.2812
6  0%|          | 0/6 [00:00<?, ?it/s]
100%|##########| 6/6 [00:00<00:00, 120.47it/s]
04-12 06:32:27 Val-Acc Target Data: 0.9635
04-12 06:32:27 The best model epoch 7, val-acc 0.9635
1004-12 06:32:27 -----Epoch 8/10-----
04-12 06:32:27 current lr: [0.001, 0.001]
  0%|          | 0/10 [00:00<?, ?it/s]
 40%|####      | 4/10 [00:00<00:00, 37.14it/s] 80%|########  | 8/10 [00:00<00:00, 35.63it/s]100%|##########| 10/10 [00:00<00:00, 35.98it/s]
04-12 06:32:28 Train-Loss Source Classifier: 0.1525
04-12 06:32:28 Train-Loss Discriminator: 0.6896
04-12 06:32:28 Train-Acc Source Data: 0.9938
04-12 06:32:28 Train-Acc Discriminator: 53.3594
6  0%|          | 0/6 [00:00<?, ?it/s]
100%|##########| 6/6 [00:00<00:00, 116.60it/s]
04-12 06:32:28 Val-Acc Target Data: 0.9792
04-12 06:32:28 The best model epoch 8, val-acc 0.9792
1004-12 06:32:28 -----Epoch 9/10-----
04-12 06:32:28 current lr: [0.001, 0.001]
  0%|          | 0/10 [00:00<?, ?it/s]
 40%|####      | 4/10 [00:00<00:00, 38.39it/s] 80%|########  | 8/10 [00:00<00:00, 37.43it/s]100%|##########| 10/10 [00:00<00:00, 37.45it/s]
04-12 06:32:28 Train-Loss Source Classifier: 0.1013
04-12 06:32:28 Train-Loss Discriminator: 0.6876
04-12 06:32:28 Train-Acc Source Data: 0.9984
04-12 06:32:28 Train-Acc Discriminator: 55.5469
6  0%|          | 0/6 [00:00<?, ?it/s]
100%|##########| 6/6 [00:00<00:00, 145.75it/s]
04-12 06:32:28 Val-Acc Target Data: 0.9922
04-12 06:32:28 The best model epoch 9, val-acc 0.9922
1004-12 06:32:28 -----Epoch 10/10-----
04-12 06:32:28 current lr: [0.001, 0.001]

  0%|          | 0/10 [00:00<?, ?it/s] 40%|####      | 4/10 [00:00<00:00, 39.04it/s] 80%|########  | 8/10 [00:00<00:00, 38.05it/s]100%|##########| 10/10 [00:00<00:00, 37.76it/s]
04-12 06:32:28 Train-Loss Source Classifier: 0.0731
04-12 06:32:28 Train-Loss Discriminator: 0.6862
04-12 06:32:28 Train-Acc Source Data: 0.9969
04-12 06:32:28 Train-Acc Discriminator: 56.7188
6  0%|          | 0/6 [00:00<?, ?it/s]
100%|##########| 6/6 [00:00<00:00, 143.13it/s]
04-12 06:32:28 Val-Acc Target Data: 0.9766
04-12 06:32:28 The best model epoch 9, val-acc 0.9922
  0%|          | 0/6 [00:00<?, ?it/s]100%|##########| 6/6 [00:00<00:00, 154.08it/s]
04-12 06:32:31 *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2-D array with a single row if you intend to specify the same RGB or RGBA value for all points.
04-12 06:32:31 *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2-D array with a single row if you intend to specify the same RGB or RGBA value for all points.
04-12 06:32:31 *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2-D array with a single row if you intend to specify the same RGB or RGBA value for all points.
04-12 06:32:31 *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2-D array with a single row if you intend to specify the same RGB or RGBA value for all points.
04-12 06:32:31 *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2-D array with a single row if you intend to specify the same RGB or RGBA value for all points.
04-12 06:32:31 *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2-D array with a single row if you intend to specify the same RGB or RGBA value for all points.
04-12 06:32:31 *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2-D array with a single row if you intend to specify the same RGB or RGBA value for all points.
04-12 06:32:31 *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2-D array with a single row if you intend to specify the same RGB or RGBA value for all points.
